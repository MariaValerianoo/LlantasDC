create database dbtiendaonline;
use dbtiendaonline;

create table cliente(
    idcliente int auto_increment primary key not null,
    nombrecliente varchar(15) null,
    apellidocliente varchar(15) null,
    direccioncliente varchar(15) null,
    telefono int(10) null,
    fechanacimiento date
);

create table usuario (
    idusuario int auto_increment primary key,
    cedulausuario int not null,
    nombreusuario varchar(50),
    apellidousuario varchar(50),
    direccionusuario varchar(100),
    telefono varchar(15),
    rolusuario varchar(50)
);

create table venta(
    idventas int (15) not null,
    numorden varchar(15) primary key not null,
    fechacompra date not null,
    totalcompra int not null,
    idusuariofk int not null,
    idclientefk int not null
);

create table producto(
    idproducto int (15) not null,
    codigobarras varchar(15) primary key not null,
    nombreproducto varchar(15) not null,
    marca varchar(15) not null,
    precio float not null
);

create table prodven(
    numordenfk varchar(15) not null,
    codigobarrasfk varchar(18) not null,
    cantidad int not null
);

alter table venta
add constraint ventasar
foreign key(idusuariofk)
references usuario(idusuario);

alter table venta
add constraint ventaclie
foreign key(idclientefk)
references cliente(idcliente);

alter table prodven
add constraint fkprodventa
foreign key(numordenfk)
references venta(numorden);

alter table prodven
add constraint prodvenk
foreign key(codigobarrasfk)
references producto(codigobarras);

insert into cliente (nombrecliente, apellidocliente, direccioncliente, telefono, fechanacimiento) 
values ('juan', 'pérez', 'calle 1', 3001234567, '1985-01-10'),
       ('ana', 'gómez', 'calle 2', 3007654321, '1990-05-25'),
       ('pedro', 'martínez', 'calle 3', 3001122334, '1978-01-30'),
       ('luisa', 'fernández', 'calle 4', 3009988776, '2001-09-12');

insert into usuario (cedulausuario, nombreusuario, apellidousuario, direccionusuario, telefono, rolusuario) 
values (1028481760, 'mafe', 'valeriano', 'calle 10', '3101234567', 'empleado'),
       (52537135, 'ruth', 'pulido', 'calle 15', '3173613339', 'empleado'),
       (1023456789, 'carlos', 'lópez', 'calle 20', '3123456789', 'administrador'),
       (1087654321, 'maría', 'rodríguez', 'calle 25', '3198765432', 'empleado');

insert into producto (codigobarras, nombreproducto, marca, precio) 
values ('45hg', 'jabón', 'suavitel', 10000),
       ('45jh', 'detergente', 'ak', 15000),
       ('89kq', 'shampoo', 'head & shoulders', 25000),
       ('12rw', 'cepillo', 'oral-b', 5000);

insert into venta (numorden, fechacompra, totalcompra, idusuariofk, idclientefk) 
values ('ord001', '2023-03-15', 35000, 1, 1),
       ('ord002', '2023-04-20', 25000, 2, 2),
       ('ord003', '2023-06-05', 45000, 1, 3),
       ('ord004', '2023-07-10', 30000, 3, 4);

insert into prodven (numordenfk, codigobarrasfk, cantidad) 
values ('ord001', '45hg', 2),
       ('ord002', '45jh', 1),
       ('ord003', '89kq', 2),
       ('ord004', '12rw', 3);
       
select * from producto;

/*ordenar productos por precio de menor a mayor*/
select * from producto order by precio asc;

/*consultar los clientes que nacen en enero*/
select * from cliente where idcliente in ('1', '3');

/* consultar los usuarios con el rol de empleado*/
select * from usuario where nombrecliente like '%mafe%' or nombrecliente like '%ruth%' or nombrecliente like '%maría%';

/*consultar las órdenes generadas entre marzo y junio*/
select * from venta where fechacompra between '2023-03-01' and '2023-06-30';

/*consultar productos que contengan la letra 'r'*/
select * from producto where nombreproducto like '%r%';

/*consultar las ventas que tengan productos con precios entre 15.000 y 30.000*/
select v.*
from venta v
join prodven pv on v.numorden = pv.numordenfk
join producto p on pv.codigobarrasfk = p.codigobarras
where p.precio between 15000 and 30000;
select sum(precio) from producto;
select avg(precio) from producto;
alter table prodven add column total int(255)  not null;
/*Consultas multitabla*/

select *from venta inner join cliente on venta.idclientefk=cliente.idcliente;
/*Consultar el cliente de la maxima venta hecha*/
select venta.idclientefk,cliente.nombrecliente,cliente.idcliente,prodven.total
 from venta
 inner join cliente on venta.idclientefk=cliente.idcliente
 inner join prodven on venta.numOrder=prodven.numordenfk
 where total=max(total);
 
/*consultar usuario y cliente de una venta*/
select v.numorden, u.nombreusuario, u.apellidousuario, c.nombrecliente, c.apellidocliente
from venta v
inner join usuario u on v.idusuariofk = u.idusuario
inner join cliente c on v.idclientefk = c.idcliente
where v.numorden = 'ord001'; 


/*consultar los productos que compro un cliente especifico*/
select c.nombrecliente, c.apellidocliente, p.nombreproducto, p.marca, p.precio
from venta v
inner join cliente c on v.idclientefk = c.idcliente
inner join prodven pv on v.numorden = pv.numordenfk
inner join producto p on pv.codigobarrasfk = p.codigobarras
where c.idcliente = 1; 

/*consultar todos los clientes que han hecho una orden*/
select nombrecliente from cliente
inner join venta on cliente.idcliente = venta.idclientefk;

/*Modificaciones: Ajustar la informacion que nosotros escribamos mal*/
/*Modificar update nombreTabla set campoamodificar='nuevovalor';*/
insert into cliente (idcliente,nombrecliente, apellidocliente, direccioncliente, telefono, fechanacimiento) 
values(45,'tatiana', 'cabrera', 'calle 7', 3222045689, '1980-07-13');
insert into producto (idproducto,codigobarras, nombreproducto, marca, precio) 
values (15,'78yu', 'mameluco', 'babyshow', 5000);
insert into usuario (cedulausuario, nombreusuario, apellidousuario, direccionusuario, telefono, rolusuario) 
values (1014661499, 'maria', 'pulido', 'calle 85', '3103305802', 'empleado');
describe venta;
insert into venta (idventas, numorden, fechacompra, totalcompra, idusuariofk, idclientefk) 
values (18,'ord005', '2024-09-27', 5000, 5, 5);
insert into prodven (numordenfk, codigobarrasfk, cantidad) 
values ('ord005', '78yu', 1);
describe cliente;
select*from cliente;
update cliente set apellidocliente='Cabrera Vargas', direccioncliente='cll 104#13-14',
telefono='3144606918'
where idcliente=5; 
update cliente set fechanacimiento='1985-11-24' where idcliente=5; 
update cliente set idcliente=55163118 where idcliente=5; 
select*from producto;
describe producto;
update venta set idventas='20240927' where idusuariofk=5;
/*eliminacion*/
delete from venta where idusuariofk=5;
insert into cliente (nombrecliente, apellidocliente, direccioncliente, telefono, fechanacimiento) 
values('tatiana', 'cabrera vargas', 'cll 104#13-14', 3144606918, '1985-11-24');

/*Procedimientos almacenados->subrutinas almacenar la informacion en la bd
delimiter//
create procedure nombre_procedimiento(parametro)
BEGIN
--lOGICA DE LA SENTENCIA QUE SE QUIERA UTILIZAR
END//
*/
Delimiter //
create procedure registrar_producto(idproducto int,codigobarras varchar(15),nombreproducto varchar(15),marca varchar(15),precio float)
begin
insert into producto values (idproducto,codigobarras,nombreproducto,marca,precio);
end//
delimiter ;
call registrar_producto('48','15ghjk','jabón perros','tupee',15000);
delete from producto where codigobarras='15ghjk';
select*from producto;
describe producto;
drop procedure registrar_producto;

/*procedimiento para inactivar cliente*/
alter table cliente add estado varchar(10) default 'activo';

delimiter //
create procedure inactivar_cliente(in id_cliente int)
begin
    update cliente
    set estado = 'inactivo'
    where idcliente = id_cliente;
end //
delimiter ;
call inactivar_cliente(1); -- inactiva el cliente con id = 1


/*-consultar productos que ah comprado un cliente*/
delimiter //
create procedure consultar_productos_comprados(in id_cliente int)
begin
    select c.nombrecliente, c.apellidocliente, p.nombreproducto, p.marca, p.precio
    from venta v
    inner join cliente c on v.idclientefk = c.idcliente
    inner join prodven pv on v.numorden = pv.numordenfk
    inner join producto p on pv.codigobarrasfk = p.codigobarras
    where c.idcliente = id_cliente;
end //
delimiter ;
call consultar_productos_comprados(1);


/*modificar fecha de nacimiento cliente*/
delimiter //
create procedure modificar_fecha_nacimiento(in id_cliente int, in nueva_fecha date)
begin
    update cliente
    set fechanacimiento = nueva_fecha
    where idcliente = id_cliente;
end //
delimiter ;
call modificar_fecha_nacimiento(1, '1992-04-25');

/*-vista que consulte que cliente compro un producto y cual fue su numero de orden*/
create view vista_cliente_producto as
select c.nombrecliente, c.apellidocliente, p.nombreproducto, v.numorden
from cliente c
join venta v on c.idcliente = v.idclientefk
join prodven pv on v.numorden = pv.numordenfk
join producto p on pv.codigobarrasfk = p.codigobarras;
select * from vista_cliente_producto;

/*-vista que muestre el cliente que mas compras alla hecho*/
create view cliente_mas_compras as
select c.idcliente, c.nombrecliente, c.apellidocliente, count(v.numorden) as total_compras
from cliente c
join venta v on c.idcliente = v.idclientefk
group by c.idcliente, c.nombrecliente, c.apellidocliente
order by total_compras desc
limit 1;
select * from cliente_mas_compras;

/*Sub consultas: son consultas anidadas dentro de otra consulta
select campo2,campo3 from tablagrande 
where columna2=(select columna2x from tablapequeña where condicion);
*/
/*consultar los datos de los empleados y su sueldo promedio*/
select idempleado,nombreempleado,salario,(select avg(salario)  from empleado) as promedio
from empleado;
/*consultar el empleado que tenga un salario mayor que el salario promedio*/
select idempleado,nombreempleado,salario from empleado where salario>(select avg(salario)  from empleado);

/*consultar a que area pertenece un empleado*/
select idempleado,nombreempleado,idArea,nombreArea
from empleado
where idArea in (select idArea from area where nombreempleado='juan');

/*calcular los productos que se vendan a un precio mayor del promedio de todos los productos*/

select idproducto,nombreproducto,precio from producto where precio>(select avg(precio)  from producto);

/*Mostrar los clientes que el total de compra sea mayor al promedio de compras de la tienda*/
select idcliente,nombrecliente,totalcompra
from cliente
where totalcompra in (select totalcompra from venta where select avg(totalcompra));
/*Mostrar el promedio de precios de productos comprados por clientes*/
select idproducto,precio,nombreproducto(select avg(precio)  from producto) as promedio
from producto;